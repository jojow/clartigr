#%RAML 0.8
---
title: clartigr
baseUri: "http://{host}/api/{version}"
version: v1
schemas:
  - instance: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"invoker_config\": {}\n      }\n    },\n    \"results\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"stdout\": { \"type\": \"string\" },\n        \"stderr\": { \"type\": \"string\" }\n      }\n    },\n    \"_links\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"[a-zA-Z0-9-_.]+\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"href\": { \"type\": \"string\" }\n          }\n        }\n      }\n    },\n    \"_id\": { \"type\": \"string\" },\n    \"status\": { \"type\": \"string\" },\n    \"created\": { \"type\": \"string\" },\n    \"finished\": { \"type\": \"string\" },\n    \"failed\": { \"type\": \"string\" },\n    \"error\": { \"type\": \"string\" }\n  },\n  \"required\": [ \"parameters\" ]\n}\n"
  - instanceCollection: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"array\",\n  \"description\": \"List of instances\"\n}\n"
  - instanceInvokerChef: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"invoker_config\": {\n          \"type\": \"object\",\n          \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n          \"properties\": {\n            \"access\": {\n              \"description\": \"Currently supported access mechanisms: local, ssh\",\n              \"type\": \"string\",\n              \"default\": \"local\"\n            },\n            \"min_runs\": {\n              \"description\": \"Min number of runs\",\n              \"type\": \"integer\",\n              \"default\": 1\n            },\n            \"max_runs\": {\n              \"description\": \"Max number of runs\",\n              \"type\": \"integer\",\n              \"default\": 3\n            },\n            \"ssh_port\": {\n              \"description\": \"SSH port\",\n              \"type\": \"integer\",\n              \"default\": 22\n            },\n            \"ssh_host\": {\n              \"description\": \"SSH host (DNS name or IP address)\",\n              \"type\": \"integer\"\n            },\n            \"ssh_user\": {\n              \"description\": \"SSH username\",\n              \"type\": \"string\",\n              \"default\": \"ubuntu\"\n            },\n            \"ssh_private_key\": {\n              \"description\": \"SSH private key\",\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"access\"\n          ]\n        },\n        \"run_list\": {\n          \"type\": \"array\",\n          \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        }\n      }\n    },\n    \"results\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"stderr\": {\n          \"type\": \"string\"\n        },\n        \"run_list\": {\n          \"type\": \"object\",\n          \"description\": \"Chef run list used for invocation\"\n        },\n        \"ps\": {\n          \"type\": \"string\",\n          \"description\": \"Running processes after invocation\"\n        },\n        \"logs\": {\n          \"type\": \"string\",\n          \"description\": \"Log messages put to stdout\"\n        }\n      }\n    },\n    \"_links\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"[a-zA-Z0-9-_.]+\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"href\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"_id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"created\": {\n      \"type\": \"string\"\n    },\n    \"finished\": {\n      \"type\": \"string\"\n    },\n    \"failed\": {\n      \"type\": \"string\"\n    },\n    \"error\": {\n      \"type\": \"string\"\n    },\n    \"executable\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\n            \"files\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"object\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"base64\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"url\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"tarball_url\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\n    \"parameters\"\n  ]\n}"
  - instanceInvokerPython: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"invoker_config\": {\n          \"type\": \"object\",\n          \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n          \"properties\": {\n            \"version\": {\n              \"description\": \"Python version, e.g., 2.7.8\",\n              \"type\": \"string\"\n            },\n            \"requirements\": {\n              \"description\": \"Python requirements, written to requirements.txt\",\n              \"type\": \"string\"\n            },\n            \"env\": {\n              \"description\": \"Environment variables; overrides environment variables mapped from parameters\",\n              \"type\": \"object\"\n            },\n            \"stdin\": {\n              \"description\": \"Standard input; overrides standard input mapped from a parameter\",\n              \"type\": \"string\"\n            },\n            \"access\": {\n              \"description\": \"Currently supported access mechanisms: local, ssh\",\n              \"type\": \"string\",\n              \"default\": \"local\"\n            },\n            \"ssh_port\": {\n              \"description\": \"SSH port\",\n              \"type\": \"integer\",\n              \"default\": 22\n            },\n            \"ssh_host\": {\n              \"description\": \"SSH host (DNS name or IP address)\",\n              \"type\": \"integer\"\n            },\n            \"ssh_user\": {\n              \"description\": \"SSH username\",\n              \"type\": \"string\",\n              \"default\": \"ubuntu\"\n            },\n            \"ssh_private_key\": {\n              \"description\": \"SSH private key\",\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"access\"\n          ]\n        },\n        \"cmd\": {\n          \"type\": \"string\",\n          \"description\": \"Python command including all options and arguments\",\n          \"default\": \"python script.py\"\n        }\n      }\n    },\n    \"results\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"stdout\": {\n          \"type\": \"string\"\n        },\n        \"stderr\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"_links\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"[a-zA-Z0-9-_.]+\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"href\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"_id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"created\": {\n      \"type\": \"string\"\n    },\n    \"finished\": {\n      \"type\": \"string\"\n    },\n    \"failed\": {\n      \"type\": \"string\"\n    },\n    \"error\": {\n      \"type\": \"string\"\n    },\n    \"executable\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\n            \"files\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"object\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"base64\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"url\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"tarball_url\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\n    \"parameters\"\n  ]\n}"
  - instanceInvokerRuby: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"invoker_config\": {\n          \"type\": \"object\",\n          \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n          \"properties\": {\n            \"version\": {\n              \"description\": \"Ruby version, e.g., 2.2.0\",\n              \"type\": \"string\"\n            },\n            \"gemfile\": {\n              \"description\": \"Gem requirements, written to Gemfile\",\n              \"type\": \"string\"\n            },\n            \"gemfile_lock\": {\n              \"description\": \"Locked gem requirements, written to Gemfile.lock\",\n              \"type\": \"string\"\n            },\n            \"env\": {\n              \"description\": \"Environment variables; overrides environment variables mapped from parameters\",\n              \"type\": \"object\"\n            },\n            \"stdin\": {\n              \"description\": \"Standard input; overrides standard input mapped from a parameter\",\n              \"type\": \"string\"\n            },\n            \"access\": {\n              \"description\": \"Currently supported access mechanisms: local, ssh\",\n              \"type\": \"string\",\n              \"default\": \"local\"\n            },\n            \"ssh_port\": {\n              \"description\": \"SSH port\",\n              \"type\": \"integer\",\n              \"default\": 22\n            },\n            \"ssh_host\": {\n              \"description\": \"SSH host (DNS name or IP address)\",\n              \"type\": \"integer\"\n            },\n            \"ssh_user\": {\n              \"description\": \"SSH username\",\n              \"type\": \"string\",\n              \"default\": \"ubuntu\"\n            },\n            \"ssh_private_key\": {\n              \"description\": \"SSH private key\",\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"access\"\n          ]\n        },\n        \"cmd\": {\n          \"type\": \"string\",\n          \"description\": \"Ruby command including all options and arguments\",\n          \"default\": \"bundle exec ruby script.rb\"\n        }\n      }\n    },\n    \"results\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"stdout\": {\n          \"type\": \"string\"\n        },\n        \"stderr\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"_links\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"[a-zA-Z0-9-_.]+\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"href\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"_id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"created\": {\n      \"type\": \"string\"\n    },\n    \"finished\": {\n      \"type\": \"string\"\n    },\n    \"failed\": {\n      \"type\": \"string\"\n    },\n    \"error\": {\n      \"type\": \"string\"\n    },\n    \"executable\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\n            \"files\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"object\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"base64\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"url\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"tarball_url\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\n    \"parameters\"\n  ]\n}"
  - instanceInvokerShell: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"invoker_config\": {\n          \"type\": \"object\",\n          \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n          \"properties\": {\n            \"env\": {\n              \"description\": \"Environment variables; overrides environment variables mapped from parameters\",\n              \"type\": \"object\"\n            },\n            \"stdin\": {\n              \"description\": \"Standard input; overrides standard input mapped from a parameter\",\n              \"type\": \"string\"\n            },\n            \"access\": {\n              \"description\": \"Currently supported access mechanisms: local, ssh\",\n              \"type\": \"string\",\n              \"default\": \"local\"\n            },\n            \"ssh_port\": {\n              \"description\": \"SSH port\",\n              \"type\": \"integer\",\n              \"default\": 22\n            },\n            \"ssh_host\": {\n              \"description\": \"SSH host (DNS name or IP address)\",\n              \"type\": \"integer\"\n            },\n            \"ssh_user\": {\n              \"description\": \"SSH username\",\n              \"type\": \"string\",\n              \"default\": \"ubuntu\"\n            },\n            \"ssh_private_key\": {\n              \"description\": \"SSH private key\",\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"access\"\n          ]\n        },\n        \"cmd\": {\n          \"type\": \"string\",\n          \"description\": \"Shell command\",\n          \"default\": \"sh script.sh\"\n        }\n      }\n    },\n    \"results\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"stdout\": {\n          \"type\": \"string\"\n        },\n        \"stderr\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"_links\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"[a-zA-Z0-9-_.]+\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"href\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"_id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"created\": {\n      \"type\": \"string\"\n    },\n    \"finished\": {\n      \"type\": \"string\"\n    },\n    \"failed\": {\n      \"type\": \"string\"\n    },\n    \"error\": {\n      \"type\": \"string\"\n    },\n    \"executable\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\n            \"files\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"object\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"base64\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  {\n                    \"properties\": {\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"url\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        {\n          \"properties\": {\n            \"tarball_url\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\n    \"parameters\"\n  ]\n}"
documentation:
  - title: Invoker chef
    content: "Use this invoker to run arbitrary, supported executables in an ad-hoc manner."
  - title: Invoker python
    content: "Use this invoker to run arbitrary, supported executables in an ad-hoc manner."
  - title: Invoker ruby
    content: "Use this invoker to run arbitrary, supported executables in an ad-hoc manner."
  - title: Invoker shell
    content: "Use this invoker to run arbitrary, supported executables in an ad-hoc manner."
/invokers/chef/instances:
  get:
    description: List all instances
    queryParameters:
      status:
        type: string
        description: "Filter instances by status ('running', 'finished', etc.)"
        example: running
        required: false
    responses:
      "200":
        body:
          application/json:
            schema: instanceCollection
  post:
    description: Add a new instance
    body:
      application/json:
        schema: instanceInvokerChef
        example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"run_list\": []\n  }\n}"
    responses:
      "201":
        body:
          application/json:
            schema: instanceInvokerChef
            example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"run_list\": []\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
  "/{instanceId}":
    get:
      description: Get instance details
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerChef
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"run_list\": []\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
        "404":
          body:
            application/json:
              example: "{ \"message\": \"instance missing\" }\n"
    put:
      description: "Update instance to set status, e.g., to 'running'"
      body:
        application/json:
          schema: instanceInvokerChef
          example: "{ \"status\": \"running\" }\n"
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerChef
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"run_list\": []\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
    delete:
      description: Delete instance permanently
/invokers/python/instances:
  get:
    description: List all instances
    queryParameters:
      status:
        type: string
        description: "Filter instances by status ('running', 'finished', etc.)"
        example: running
        required: false
    responses:
      "200":
        body:
          application/json:
            schema: instanceCollection
  post:
    description: Add a new instance
    body:
      application/json:
        schema: instanceInvokerPython
        example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"python script.py\"\n  }\n}"
    responses:
      "201":
        body:
          application/json:
            schema: instanceInvokerPython
            example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"python script.py\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
  "/{instanceId}":
    get:
      description: Get instance details
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerPython
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"python script.py\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
        "404":
          body:
            application/json:
              example: "{ \"message\": \"instance missing\" }\n"
    put:
      description: "Update instance to set status, e.g., to 'running'"
      body:
        application/json:
          schema: instanceInvokerPython
          example: "{ \"status\": \"running\" }\n"
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerPython
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"python script.py\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
    delete:
      description: Delete instance permanently
/invokers/ruby/instances:
  get:
    description: List all instances
    queryParameters:
      status:
        type: string
        description: "Filter instances by status ('running', 'finished', etc.)"
        example: running
        required: false
    responses:
      "200":
        body:
          application/json:
            schema: instanceCollection
  post:
    description: Add a new instance
    body:
      application/json:
        schema: instanceInvokerRuby
        example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"bundle exec ruby script.rb\"\n  }\n}"
    responses:
      "201":
        body:
          application/json:
            schema: instanceInvokerRuby
            example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"bundle exec ruby script.rb\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
  "/{instanceId}":
    get:
      description: Get instance details
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerRuby
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"bundle exec ruby script.rb\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
        "404":
          body:
            application/json:
              example: "{ \"message\": \"instance missing\" }\n"
    put:
      description: "Update instance to set status, e.g., to 'running'"
      body:
        application/json:
          schema: instanceInvokerRuby
          example: "{ \"status\": \"running\" }\n"
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerRuby
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"bundle exec ruby script.rb\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
    delete:
      description: Delete instance permanently
/invokers/shell/instances:
  get:
    description: List all instances
    queryParameters:
      status:
        type: string
        description: "Filter instances by status ('running', 'finished', etc.)"
        example: running
        required: false
    responses:
      "200":
        body:
          application/json:
            schema: instanceCollection
  post:
    description: Add a new instance
    body:
      application/json:
        schema: instanceInvokerShell
        example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"sh script.sh\"\n  }\n}"
    responses:
      "201":
        body:
          application/json:
            schema: instanceInvokerShell
            example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"sh script.sh\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
  "/{instanceId}":
    get:
      description: Get instance details
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerShell
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"sh script.sh\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
        "404":
          body:
            application/json:
              example: "{ \"message\": \"instance missing\" }\n"
    put:
      description: "Update instance to set status, e.g., to 'running'"
      body:
        application/json:
          schema: instanceInvokerShell
          example: "{ \"status\": \"running\" }\n"
      responses:
        "200":
          body:
            application/json:
              schema: instanceInvokerShell
              example: "{\n  \"parameters\": {\n    \"invoker_config\": {\n      \"some_config_param\": \"some_value\"\n    },\n    \"some_param\": \"some_value\",\n    \"cmd\": \"sh script.sh\"\n  },\n  \"_id\": \"eae393ac-b766-4ffc-a69b-d41e37b3f5b2\",\n  \"status\": \"running\"\n}"
    delete:
      description: Delete instance permanently
